# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T09:35:39+00:00

from __future__ import annotations

from datetime import datetime
from typing import Any, Optional

from pydantic import BaseModel, Field, RootModel, constr


class Data(RootModel[constr(max_length=131072)]):
    root: constr(max_length=131072) = Field(
        ...,
        description='The data to be sent to the client specified by its connection id.',
    )


class DeleteConnectionRequest(BaseModel):
    pass


class ForbiddenException(RootModel[Any]):
    root: Any


class GetConnectionRequest(BaseModel):
    pass


class GoneException(RootModel[Any]):
    root: Any


class LimitExceededException(RootModel[Any]):
    root: Any


class PayloadTooLargeException(RootModel[Any]):
    root: Any


class PostToConnectionRequest(BaseModel):
    Data_1: Data = Field(..., alias='Data')


class FieldString(RootModel[str]):
    root: str


class FieldTimestampIso8601(RootModel[datetime]):
    root: datetime


class FieldConnectionsConnectionIdPostRequest(BaseModel):
    Data: constr(max_length=131072) = Field(
        ...,
        description='The data to be sent to the client specified by its connection id.',
    )


class Identity(BaseModel):
    SourceIp: FieldString
    UserAgent: FieldString


class GetConnectionResponse(BaseModel):
    ConnectedAt: Optional[FieldTimestampIso8601] = None
    Identity_1: Optional[Identity] = Field(None, alias='Identity')
    LastActiveAt: Optional[FieldTimestampIso8601] = None
